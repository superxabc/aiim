# AIIM生产环境基础配置
# 注意：完整的生产环境部署请使用 deployment-scripts/ 中的脚本
# 此文件仅包含AIIM应用的核心组件，不包含nginx等基础设施组件

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-aiim}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-aiim_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-aiim}"]
      interval: 30s
      timeout: 10s
      retries: 3

  aiim:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      # 核心配置
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: HS256
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-aiim}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-aiim_db}
      REDIS_URL: redis://redis:6379
      REQUIRE_REDIS: "true"
      
      # 服务配置
      INSTANCE_ID: ${INSTANCE_ID:-aiim-prod-1}
      RATE_LIMIT_PER_SEC: ${RATE_LIMIT_PER_SEC:-50}
      DEV_AUTO_CREATE_TABLES: "false"
      
      # 媒体存储配置 (生产环境使用阿里云OSS)
      MINIO_ENDPOINT: ${OSS_ENDPOINT}
      MINIO_ACCESS_KEY: ${OSS_ACCESS_KEY}
      MINIO_SECRET_KEY: ${OSS_SECRET_KEY}
      MINIO_BUCKET_NAME: ${OSS_BUCKET_NAME:-aiim-media-prod}
      MINIO_SECURE: "true"
      MEDIA_MAX_FILE_SIZE: ${MEDIA_MAX_FILE_SIZE:-104857600}  # 100MB
      MEDIA_ALLOWED_TYPES: "audio/mpeg,audio/wav,audio/ogg,audio/mp4,audio/webm,audio/aac,video/mp4,video/webm"
      MEDIA_URL_EXPIRE_SECONDS: ${MEDIA_URL_EXPIRE_SECONDS:-3600}
      
      # STUN/TURN配置
      STUN_SERVERS: ${STUN_SERVERS}
      TURN_SERVER: ${TURN_SERVER}
      TURN_USERNAME: ${TURN_USERNAME}
      TURN_PASSWORD: ${TURN_PASSWORD}
      TURN_CREDENTIAL_TTL: ${TURN_CREDENTIAL_TTL:-300}
    ports:
      - "127.0.0.1:8083:8083"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # nginx:
  #   注意：生产环境nginx配置已移至 deployment-scripts/ 
  #   使用部署脚本进行完整的nginx配置和SSL设置

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
