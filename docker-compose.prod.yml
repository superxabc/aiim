version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: aiim_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-aiim_password}
      POSTGRES_DB: aiim_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiim_user -d aiim_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aiim_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: >
      redis-server 
      --maxmemory 128mb 
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - aiim_network

  aiim:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=HS256
      - DATABASE_URL=postgresql+psycopg2://aiim_user:${POSTGRES_PASSWORD:-aiim_password}@postgres:5432/aiim_db
      - REDIS_URL=redis://redis:6379/0
      - INSTANCE_ID=aiim-prod-1
      - RATE_LIMIT_PER_SEC=20
      - REQUIRE_REDIS=true
      - DEV_AUTO_CREATE_TABLES=false
    ports:
      - "${AIIM_PORT:-8083}:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - aiim_network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - aiim
    restart: unless-stopped
    profiles:
      - nginx
    networks:
      - aiim_network

volumes:
  postgres_data:
  redis_data:

networks:
  aiim_network:
    driver: bridge
